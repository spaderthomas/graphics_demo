src\editor_impl.hpp:						smooth_drag_offset = entity->get_component<Position_Component>()->world_pos - input.world_pos; // So we don't jump to the exact mouse position
src\editor_impl.hpp:					if (current_entity->name == selected()->name) {
src\editor_impl.hpp:								smooth_drag_offset = entity->get_component<Position_Component>()->world_pos - input.world_pos; // So we don't jump to the exact mouse position
src\entity_impl.hpp:	entity->id = next_id++;
src\entity_impl.hpp:	entity->name = entity_name;
src\entity_impl.hpp:		//      pool_handle<any_component> handle = entity->add_component<Movement_Component>();
src\entity_impl.hpp:			auto handle = entity->add_component<Graphic_Component>();
src\entity_impl.hpp:			entity->add_component<Position_Component>();
src\entity_impl.hpp:			auto handle = entity->add_component<Movement_Component>();
src\entity_impl.hpp:			auto handle = entity->add_component<Vision_Component>();
src\entity_impl.hpp:			entity->add_component<Interaction_Component>();
src\entity_impl.hpp:			auto handle = entity->add_component<Door_Component>();
src\entity_impl.hpp:			auto handle = entity->add_component<Collision_Component>();
src\entity_impl.hpp:			auto handle = entity->add_component<Task_Component>();
src\entity_impl.hpp:			auto handle = entity->add_component<BattleComponent>();
src\entity_impl.hpp:			entity->add_component<TileComponent>();
src\level_impl.hpp:		if (entity->name == name) return entity;
src\level_impl.hpp:		if (entity->name == name) {
src\level_impl.hpp:			return entity->name == name;
src\level_impl.hpp:		TableNode* saved_entity = entity->save();
src\state.hpp:					if (entity->name == entity_name) {
src\state.hpp:						auto task = entity->get_component<Task_Component>()->task;
src\game_impl.hpp:			if (entity->get_component<Collision_Component>()) {
